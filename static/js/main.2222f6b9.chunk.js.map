{"version":3,"sources":["componentes/Header.js","componentes/Noticia.js","componentes/Noticias.js","componentes/Formulario.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","react_default","a","createElement","className","titulo","Noticia","_props$noticia","noticia","description","title","url","urlToImage","source","imagen","src","alt","name","href","target","Noticias","TransitionGroup","this","noticias","map","CSSTransition","key","classNames","timeout","componentes_Noticia","Component","Formulario","CategoriaRef","React","createRef","elegirCategoria","e","preventDefault","categoria","_this","current","value","consultarNoticias","onSubmit","ref","defaultValue","type","App","state","arguments","length","undefined","concat","fetch","then","response","json","setState","articles","componentes_Header","componentes_Formulario","componentes_Noticias","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2222f6b9.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { stringify } from 'querystring';\r\nconst Header = (props) => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper light-blue darken-3\">\r\n                <a className=\"brand-logo center\">\r\n                    {props.titulo}\r\n                </a>\r\n                </div>\r\n        </nav>\r\n    );\r\n}\r\n\r\nHeader.propTypes={\r\n    titulo: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Noticia = (props) => {\r\n    const {description,title,url,urlToImage,source} = props.noticia;\r\n    const imagen = (urlToImage) ?\r\n    <div className=\"card-image\">\r\n        <img src={urlToImage} alt={title}/>\r\n            <span className=\"card-title\">\r\n                {source.name}\r\n            </span>\r\n    </div>\r\n    :\r\n     '';\r\n    return (\r\n        <div className=\"col s12 m6 l4\">\r\n            <div className=\"card\">\r\n                {imagen}\r\n                <div className=\"card-content\">\r\n                    <h3>{title}</h3>\r\n                    <p>{description}</p>\r\n                </div>\r\n                <div className=\"card-action\">\r\n                    <a href={url} target=\"_blank\" className=\"waves-effect waves-light btn\">\r\n                        Leer más\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nNoticia.propTypes={\r\n    noticia: PropTypes.shape({\r\n        urlToImage: PropTypes.string,\r\n        url: PropTypes.string,\r\n        title: PropTypes.string,\r\n        source: PropTypes.object,\r\n        description: PropTypes.string\r\n    })\r\n}\r\n\r\nexport default Noticia;","import React, { Component } from 'react';\r\nimport Noticia from './Noticia';\r\nimport PropTypes from 'prop-types';\r\nimport {TransitionGroup, CSSTransition} from 'react-transition-group';\r\n\r\nclass Noticias extends Component {\r\n    render() { \r\n        return ( \r\n            <div className=\"row\">\r\n            <TransitionGroup>\r\n                {this.props.noticias.map( noticia =>(\r\n                    <CSSTransition \r\n                        key = {noticia.url}\r\n                        classNames = \"fade\"\r\n                        timeout={500}\r\n                    >\r\n                        <Noticia noticia = {noticia}/>\r\n                    </CSSTransition>\r\n                ))}\r\n            </TransitionGroup>\r\n            </div>\r\n         );\r\n    }\r\n}\r\n\r\nNoticias.propTypes={\r\n    noticias: PropTypes.array.isRequired\r\n}\r\n \r\nexport default Noticias;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Formulario extends Component {\r\n    CategoriaRef = React.createRef();\r\n    elegirCategoria = e =>\r\n    {\r\n        e.preventDefault();\r\n\r\n        const categoria = this.CategoriaRef.current.value;\r\n\r\n        this.props.consultarNoticias(categoria);\r\n    }\r\n    render() { \r\n        return ( \r\n           <div className=\"buscador row\">\r\n            <div className=\"col s12 m8 offset-m2\">\r\n                <form onSubmit={this.elegirCategoria}>\r\n                    <h2>Noticias por categoria</h2>\r\n                    <div className=\"input-field col s12 m8\">\r\n                        <select ref={this.CategoriaRef}>\r\n                            <option value=\"general\" defaultValue>General</option>\r\n                            <option value=\"business\">Negocios</option>\r\n                            <option value=\"entertainment\">Entretenimiento</option>\r\n                            <option value=\"health\">Salud</option>\r\n                            <option value=\"science\">Ciencia</option>\r\n                            <option value=\"sports\">Deportes</option>\r\n                            <option value=\"technology\">Tecnología</option>\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"input-field col s12 m4 enviar\">\r\n                        <input type=\"submit\" className=\"btn amber darken-2\" value=\"Buscar\"/>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n           </div>\r\n         );\r\n    }\r\n}\r\n\r\nFormulario.propTypes ={\r\n    consultarNoticias : PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import React, { Component } from 'react';\nimport Header from './componentes/Header';\nimport Noticias from './componentes/Noticias';\nimport Formulario from './componentes/Formulario';\n\nclass App extends Component {\n\n  state={\n    noticias:[]\n  }\n  componentDidMount()\n  {\n    this.consultarNoticias();\n  }\n\n  consultarNoticias = (categoria = 'general') =>\n  {\n\n    let url = `https://newsapi.org/v2/top-headlines?country=ar&category=${categoria}&apiKey=187f0b8d8aa346c0b175065da64302d3`;\n\n    fetch(url)\n    .then(response =>{\n      return response.json();\n    })\n    .then(noticias =>{\n      this.setState({\n        noticias : noticias.articles\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"contenedor-app\">\n          <Header titulo=\"Noticias\" />\n          <div className=\"container white contenedor-noticias\">\n            <Formulario consultarNoticias = {this.consultarNoticias} />\n            <Noticias noticias={this.state.noticias}/>\n          </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}